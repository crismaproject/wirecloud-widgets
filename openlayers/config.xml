<?xml version="1.0" encoding="UTF-8"?>

<Template xmlns="http://morfeo-project.org/2007/Template" xmlns:doc="crisma://documentation">
  <Catalog.ResourceDescription>
    <Vendor>AIT</Vendor>
    <Name>crisma-openlayers</Name>
    <Version>0.2.0</Version>
    <Author>Manuel Warum</Author>
    <Mail>Manuel.Warum.fl@ait.ac.at</Mail>
    <Description>Basic OpenLayers widget using OpenStreetMap tiles. Data, imagery and map information provided by
      OpenStreetMap and contributors, CC-BY-SA
    </Description>
    <ImageURI>img/catalogue.png</ImageURI>
    <iPhoneImageURI>img/catalogue.png</iPhoneImageURI>
    <WikiURI>http://127.0.0.1/index.htm</WikiURI>
  </Catalog.ResourceDescription>

  <Platform.Preferences>
    <Preference name="recenter" type="boolean"
                description="Automatically re-center the map whenever it changed through events" label="Auto re-center"
                default="true"/>
    <Preference name="canDraw" type="boolean" description="Is the map editable?" label="Draw" default="false"/>
  </Platform.Preferences>

  <Platform.Wiring>
    <InputEndpoint name="view_point" type="text" label="Coordinates"
                   description="Focuses the map on specified coordinates" friendcode="geo-lon-lat">
      <doc:Documentation>
        This is an endpoint that accepts a JSON-encoded object with latitude and longitude coordinate
        data. When coordinates are received (WGS 1984 projection), the map will pan to the location represented by it.
      </doc:Documentation>
    </InputEndpoint>
    <InputEndpoint name="add_point" type="text" label="Add point" description="Adds a point to the map"
                   friendcode="geo-ooi">
      <doc:Documentation>
        This is an endpoint that accepts a JSON-encoded object with latitude and longitude coordinate
        data and a unique identifier. The object will be added to the map view. If the recenter preference is set to
        true, the map will then pan to the newly added object.
      </doc:Documentation>
    </InputEndpoint>
    <InputEndpoint name="add_line" type="text" label="Add line" description="Adds a line to the map"
                   friendcode="geo-points">
      <doc:Documentation>
        This endpoint allows the creation of line segments by providing an array of tuples containing latitude-longitude
        coordinate pairs.
      </doc:Documentation>
    </InputEndpoint>
    <InputEndpoint name="add_poly" type="text" label="Add polygon" description="Adds a polygon to the map"
                   friendcode="geo-points">
      <doc:Documentation>
        This endpoint allows the creation of polygons (without holes). It accepts an array of tuples containing
        latitude-longitude coordinate pairs that will form the outline of the polygon.
      </doc:Documentation>
    </InputEndpoint>
    <InputEndpoint name="clear" type="text" label="Clear"
                   description="Removes all features from the map (points and polygons)" friendcode="signal">
      <doc:Documentation>
        This endpoint does not require any data. When any signal is received on this endpoint, all contents
        will be removed from the map unconditionally.
      </doc:Documentation>
    </InputEndpoint>
    <OutputEndpoint name="added_point" type="text" label="Added point"
                    description="Whenever a point is added via the map viewer, this event dispatches its coordinates"
                    friendcode="geo-lon-lat">
      <doc:Documentation>
        This endpoint dispatches latitude-longitude coordinates whenever a point is added to the map.
      </doc:Documentation>
    </OutputEndpoint>
    <OutputEndpoint name="added_line" type="text" label="Added line"
                    description="Whenever a (poly-)line is added via the map viewer, this event dispatches its geometry"
                    friendcode="geo-points">
      <doc:Documentation>
        Whenever a (poly-)line is added via the map viewer, this event dispatches a JSON-encoded object consisting
        of latitude-longitude coordinates -- ie. latitude-longitude tuples -- this (poly-)line is composed of.
      </doc:Documentation>
    </OutputEndpoint>
    <OutputEndpoint name="added_poly" type="text" label="Added polygon"
                    description="Whenever a polygon is added via the map viewer, this event dispatches its geometry"
                    friendcode="geo-points">
      <doc:Documentation>
        Whenever a polygon is added via the map viewer, this event dispatches a JSON-encoded object consisting
        of latitude-longitude coordinates -- ie. latitude-longitude tuples -- this polygon is composed of.
      </doc:Documentation>
    </OutputEndpoint>
    <OutputEndpoint name="center_point" type="text" label="Coordinates"
                    description="Sends a signal whenever the shown center changes" friendcode="geo-lon-lat">
      <doc:Documentation>
        This endpoint sends a signal everytime the center point of the map or the current zoom factor changes
        (either through user interaction or programmatically). The JSON-encoded data includes a latitude-longitude pair
        as well as the current zoom factor (denoted `z`).
      </doc:Documentation>
    </OutputEndpoint>
    <OutputEndpoint name="ooi_click" type="text" label="Clicked object"
                    description="Sends a signal whenever an object is clicked" friendcode="ooi-identifier">
      <doc:Documentation>
        If an object of interest was clicked on the map, this endpoint will transmit the OOI's unique identifier.
        Note that this signal and `pos_click` are mutually exclusive; if an OOI was clicked, this signal will be used
        and `pos_click` will NOT trigger.
      </doc:Documentation>
    </OutputEndpoint>
    <OutputEndpoint name="pos_click" type="text" label="Clicked spot"
                    description="Sends a signal whenever an empty area of the map is clicked" friendcode="geo-lon-lat">
      If a spot on the map was clicked, this endpoint will transmit the latitude-longitude coordinates.
      Note that this signal and `ooi_click` are mutually exclusive; if an OOI was clicked, `ooi_click` will be used
      and this signal will NOT trigger.
    </OutputEndpoint>
  </Platform.Wiring>

  <Platform.Link>
    <XHTML href="index.html"/>
  </Platform.Link>

  <Platform.Rendering width="20" height="20"/>
</Template>